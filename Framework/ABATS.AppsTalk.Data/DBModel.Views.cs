//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets6D6FBCE42FE8C06AC9E987858E061ED129BF600051071C8E5E599DED38DF6301))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets6D6FBCE42FE8C06AC9E987858E061ED129BF600051071C8E5E599DED38DF6301 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets6D6FBCE42FE8C06AC9E987858E061ED129BF600051071C8E5E599DED38DF6301()
        {
            this.EdmEntityContainerName = "DBEntities";
            this.StoreEntityContainerName = "DBModelStoreContainer";
            this.HashOverMappingClosure = "1e0e99b7844868e8a95d938928193eefb342336e636f6d5c434d0ba84c8dd1d6";
            this.HashOverAllExtentViews = "b99eb6b9749ca6b251703aeed59567614addeeb270426377a63a46b948b8308b";
            this.ViewCount = 34;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.IntegrationAdapterFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.IntegrationAdapterFields", "\r\n    SELECT VALUE -- Constructing IntegrationAdapterFields\r\n        [DBModel.Sto" +
                    "re.IntegrationAdapterFields](T1.IntegrationAdapterFields_IntegrationAdapterField" +
                    "ID, T1.IntegrationAdapterFields_IntegrationAdapterID, T1.IntegrationAdapterField" +
                    "s_FieldCategory, T1.IntegrationAdapterFields_FieldName, T1.IntegrationAdapterFie" +
                    "lds_FieldDataType, T1.IntegrationAdapterFields_IsPrimaryKey, T1.IntegrationAdapt" +
                    "erFields_PrimaryKeySequence, T1.IntegrationAdapterFields_Description, T1.Integra" +
                    "tionAdapterFields_RecordStatus, T1.IntegrationAdapterFields_RecordCreatedBy, T1." +
                    "IntegrationAdapterFields_RecordCreated, T1.IntegrationAdapterFields_RecordLastUp" +
                    "dateBy, T1.IntegrationAdapterFields_RecordLastUpdate)\r\n    FROM (\r\n        SELEC" +
                    "T \r\n            T.IntegrationAdapterFieldID AS IntegrationAdapterFields_Integrat" +
                    "ionAdapterFieldID, \r\n            T.IntegrationAdapterID AS IntegrationAdapterFie" +
                    "lds_IntegrationAdapterID, \r\n            T.FieldCategory AS IntegrationAdapterFie" +
                    "lds_FieldCategory, \r\n            T.FieldName AS IntegrationAdapterFields_FieldNa" +
                    "me, \r\n            T.FieldDataType AS IntegrationAdapterFields_FieldDataType, \r\n " +
                    "           T.IsPrimaryKey AS IntegrationAdapterFields_IsPrimaryKey, \r\n          " +
                    "  T.PrimaryKeySequence AS IntegrationAdapterFields_PrimaryKeySequence, \r\n       " +
                    "     T.Description AS IntegrationAdapterFields_Description, \r\n            T.Reco" +
                    "rdStatus AS IntegrationAdapterFields_RecordStatus, \r\n            T.RecordCreated" +
                    "By AS IntegrationAdapterFields_RecordCreatedBy, \r\n            T.RecordCreated AS" +
                    " IntegrationAdapterFields_RecordCreated, \r\n            T.RecordLastUpdateBy AS I" +
                    "ntegrationAdapterFields_RecordLastUpdateBy, \r\n            T.RecordLastUpdate AS " +
                    "IntegrationAdapterFields_RecordLastUpdate, \r\n            True AS _from0\r\n       " +
                    " FROM DBEntities.IntegrationAdapterFields AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.IntegrationProcesses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.IntegrationProcesses", "\r\n    SELECT VALUE -- Constructing IntegrationProcesses\r\n        [DBModel.Store.I" +
                    "ntegrationProcesses](T1.IntegrationProcesses_IntegrationProcessID, T1.Integratio" +
                    "nProcesses_IntegrationProcessCode, T1.IntegrationProcesses_IntegrationProcessTit" +
                    "le, T1.IntegrationProcesses_SourceIntegrationAdapterID, T1.IntegrationProcesses_" +
                    "DestinationIntegrationAdapterID, T1.IntegrationProcesses_Description, T1.Integra" +
                    "tionProcesses_RecordStatus, T1.IntegrationProcesses_RecordCreatedBy, T1.Integrat" +
                    "ionProcesses_RecordCreated, T1.IntegrationProcesses_RecordLastUpdateBy, T1.Integ" +
                    "rationProcesses_RecordLastUpdate)\r\n    FROM (\r\n        SELECT \r\n            T.In" +
                    "tegrationProcessID AS IntegrationProcesses_IntegrationProcessID, \r\n            T" +
                    ".IntegrationProcessCode AS IntegrationProcesses_IntegrationProcessCode, \r\n      " +
                    "      T.IntegrationProcessTitle AS IntegrationProcesses_IntegrationProcessTitle," +
                    " \r\n            T.SourceIntegrationAdapterID AS IntegrationProcesses_SourceIntegr" +
                    "ationAdapterID, \r\n            T.DestinationIntegrationAdapterID AS IntegrationPr" +
                    "ocesses_DestinationIntegrationAdapterID, \r\n            T.Description AS Integrat" +
                    "ionProcesses_Description, \r\n            T.RecordStatus AS IntegrationProcesses_R" +
                    "ecordStatus, \r\n            T.RecordCreatedBy AS IntegrationProcesses_RecordCreat" +
                    "edBy, \r\n            T.RecordCreated AS IntegrationProcesses_RecordCreated, \r\n   " +
                    "         T.RecordLastUpdateBy AS IntegrationProcesses_RecordLastUpdateBy, \r\n    " +
                    "        T.RecordLastUpdate AS IntegrationProcesses_RecordLastUpdate, \r\n         " +
                    "   True AS _from0\r\n        FROM DBEntities.IntegrationProcesses AS T\r\n    ) AS T" +
                    "1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.IntegrationProcessMappings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.IntegrationProcessMappings", "\r\n    SELECT VALUE -- Constructing IntegrationProcessMappings\r\n        [DBModel.S" +
                    "tore.IntegrationProcessMappings](T1.IntegrationProcessMappings_IntegrationProces" +
                    "sMappingID, T1.IntegrationProcessMappings_IntegrationProcessID, T1.IntegrationPr" +
                    "ocessMappings_SourceIntegrationAdapterFieldID, T1.IntegrationProcessMappings_Des" +
                    "tinationIntegrationAdapterFieldID, T1.IntegrationProcessMappings_Description, T1" +
                    ".IntegrationProcessMappings_RecordStatus, T1.IntegrationProcessMappings_RecordCr" +
                    "eatedBy, T1.IntegrationProcessMappings_RecordCreated, T1.IntegrationProcessMappi" +
                    "ngs_RecordLastUpdateBy, T1.IntegrationProcessMappings_RecordLastUpdate)\r\n    FRO" +
                    "M (\r\n        SELECT \r\n            T.IntegrationProcessMappingID AS IntegrationPr" +
                    "ocessMappings_IntegrationProcessMappingID, \r\n            T.IntegrationProcessID " +
                    "AS IntegrationProcessMappings_IntegrationProcessID, \r\n            T.SourceIntegr" +
                    "ationAdapterFieldID AS IntegrationProcessMappings_SourceIntegrationAdapterFieldI" +
                    "D, \r\n            T.DestinationIntegrationAdapterFieldID AS IntegrationProcessMap" +
                    "pings_DestinationIntegrationAdapterFieldID, \r\n            T.Description AS Integ" +
                    "rationProcessMappings_Description, \r\n            T.RecordStatus AS IntegrationPr" +
                    "ocessMappings_RecordStatus, \r\n            T.RecordCreatedBy AS IntegrationProces" +
                    "sMappings_RecordCreatedBy, \r\n            T.RecordCreated AS IntegrationProcessMa" +
                    "ppings_RecordCreated, \r\n            T.RecordLastUpdateBy AS IntegrationProcessMa" +
                    "ppings_RecordLastUpdateBy, \r\n            T.RecordLastUpdate AS IntegrationProces" +
                    "sMappings_RecordLastUpdate, \r\n            True AS _from0\r\n        FROM DBEntitie" +
                    "s.IntegrationProcessMappings AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.IntegrationTransactionDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.IntegrationTransactionDetails", "\r\n    SELECT VALUE -- Constructing IntegrationTransactionDetails\r\n        [DBMode" +
                    "l.Store.IntegrationTransactionDetails](T1.IntegrationTransactionDetails_Integrat" +
                    "ionTransactionDetailID, T1.IntegrationTransactionDetails_IntegrationTransactionI" +
                    "D, T1.IntegrationTransactionDetails_IntegrationTransactionDetailStatus, T1.Integ" +
                    "rationTransactionDetails_IntegrationTransactionDetailData, T1.IntegrationTransac" +
                    "tionDetails_Description, T1.IntegrationTransactionDetails_RecordStatus, T1.Integ" +
                    "rationTransactionDetails_RecordCreatedBy, T1.IntegrationTransactionDetails_Recor" +
                    "dCreated, T1.IntegrationTransactionDetails_RecordLastUpdateBy, T1.IntegrationTra" +
                    "nsactionDetails_RecordLastUpdate)\r\n    FROM (\r\n        SELECT \r\n            T.In" +
                    "tegrationTransactionDetailID AS IntegrationTransactionDetails_IntegrationTransac" +
                    "tionDetailID, \r\n            T.IntegrationTransactionID AS IntegrationTransaction" +
                    "Details_IntegrationTransactionID, \r\n            T.IntegrationTransactionDetailSt" +
                    "atus AS IntegrationTransactionDetails_IntegrationTransactionDetailStatus, \r\n    " +
                    "        T.IntegrationTransactionDetailData AS IntegrationTransactionDetails_Inte" +
                    "grationTransactionDetailData, \r\n            T.Description AS IntegrationTransact" +
                    "ionDetails_Description, \r\n            T.RecordStatus AS IntegrationTransactionDe" +
                    "tails_RecordStatus, \r\n            T.RecordCreatedBy AS IntegrationTransactionDet" +
                    "ails_RecordCreatedBy, \r\n            T.RecordCreated AS IntegrationTransactionDet" +
                    "ails_RecordCreated, \r\n            T.RecordLastUpdateBy AS IntegrationTransaction" +
                    "Details_RecordLastUpdateBy, \r\n            T.RecordLastUpdate AS IntegrationTrans" +
                    "actionDetails_RecordLastUpdate, \r\n            True AS _from0\r\n        FROM DBEnt" +
                    "ities.IntegrationTransactionDetails AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.IntegrationTransactions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.IntegrationTransactions", "\r\n    SELECT VALUE -- Constructing IntegrationTransactions\r\n        [DBModel.Stor" +
                    "e.IntegrationTransactions](T1.IntegrationTransactions_IntegrationTransactionID, " +
                    "T1.IntegrationTransactions_IntegrationTransactionTitle, T1.IntegrationTransactio" +
                    "ns_IntegrationTransactionDate, T1.IntegrationTransactions_IntegrationProcessID, " +
                    "T1.IntegrationTransactions_TransactionStatus, T1.IntegrationTransactions_Descrip" +
                    "tion, T1.IntegrationTransactions_RecordStatus, T1.IntegrationTransactions_Record" +
                    "CreatedBy, T1.IntegrationTransactions_RecordCreated, T1.IntegrationTransactions_" +
                    "RecordLastUpdateBy, T1.IntegrationTransactions_RecordLastUpdate)\r\n    FROM (\r\n  " +
                    "      SELECT \r\n            T.IntegrationTransactionID AS IntegrationTransactions" +
                    "_IntegrationTransactionID, \r\n            T.IntegrationTransactionTitle AS Integr" +
                    "ationTransactions_IntegrationTransactionTitle, \r\n            T.IntegrationTransa" +
                    "ctionDate AS IntegrationTransactions_IntegrationTransactionDate, \r\n            T" +
                    ".IntegrationProcessID AS IntegrationTransactions_IntegrationProcessID, \r\n       " +
                    "     T.TransactionStatus AS IntegrationTransactions_TransactionStatus, \r\n       " +
                    "     T.Description AS IntegrationTransactions_Description, \r\n            T.Recor" +
                    "dStatus AS IntegrationTransactions_RecordStatus, \r\n            T.RecordCreatedBy" +
                    " AS IntegrationTransactions_RecordCreatedBy, \r\n            T.RecordCreated AS In" +
                    "tegrationTransactions_RecordCreated, \r\n            T.RecordLastUpdateBy AS Integ" +
                    "rationTransactions_RecordLastUpdateBy, \r\n            T.RecordLastUpdate AS Integ" +
                    "rationTransactions_RecordLastUpdate, \r\n            True AS _from0\r\n        FROM " +
                    "DBEntities.IntegrationTransactions AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.ApplicationDatabaseQueries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.ApplicationDatabaseQueries", "\r\n    SELECT VALUE -- Constructing ApplicationDatabaseQueries\r\n        [DBModel.S" +
                    "tore.ApplicationDatabaseQueries](T1.ApplicationDatabaseQueries_ApplicationDataba" +
                    "seQueryID, T1.ApplicationDatabaseQueries_ApplicationDatabaseID, T1.ApplicationDa" +
                    "tabaseQueries_ApplicationDatabaseQueryTitle, T1.ApplicationDatabaseQueries_Appli" +
                    "cationDatabaseQueryType, T1.ApplicationDatabaseQueries_ApplicationDatabaseQueryC" +
                    "ommand, T1.ApplicationDatabaseQueries_IsAsync, T1.ApplicationDatabaseQueries_Des" +
                    "cription, T1.ApplicationDatabaseQueries_RecordStatus, T1.ApplicationDatabaseQuer" +
                    "ies_RecordCreatedBy, T1.ApplicationDatabaseQueries_RecordCreated, T1.Application" +
                    "DatabaseQueries_RecordLastUpdateBy, T1.ApplicationDatabaseQueries_RecordLastUpda" +
                    "te)\r\n    FROM (\r\n        SELECT \r\n            T.ApplicationDatabaseQueryID AS Ap" +
                    "plicationDatabaseQueries_ApplicationDatabaseQueryID, \r\n            T.Application" +
                    "DatabaseID AS ApplicationDatabaseQueries_ApplicationDatabaseID, \r\n            T." +
                    "ApplicationDatabaseQueryTitle AS ApplicationDatabaseQueries_ApplicationDatabaseQ" +
                    "ueryTitle, \r\n            T.ApplicationDatabaseQueryType AS ApplicationDatabaseQu" +
                    "eries_ApplicationDatabaseQueryType, \r\n            T.ApplicationDatabaseQueryComm" +
                    "and AS ApplicationDatabaseQueries_ApplicationDatabaseQueryCommand, \r\n           " +
                    " T.IsAsync AS ApplicationDatabaseQueries_IsAsync, \r\n            T.Description AS" +
                    " ApplicationDatabaseQueries_Description, \r\n            T.RecordStatus AS Applica" +
                    "tionDatabaseQueries_RecordStatus, \r\n            T.RecordCreatedBy AS Application" +
                    "DatabaseQueries_RecordCreatedBy, \r\n            T.RecordCreated AS ApplicationDat" +
                    "abaseQueries_RecordCreated, \r\n            T.RecordLastUpdateBy AS ApplicationDat" +
                    "abaseQueries_RecordLastUpdateBy, \r\n            T.RecordLastUpdate AS Application" +
                    "DatabaseQueries_RecordLastUpdate, \r\n            True AS _from0\r\n        FROM DBE" +
                    "ntities.ApplicationDatabaseQueries AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.ApplicationWebServiceRequests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.ApplicationWebServiceRequests", "\r\n    SELECT VALUE -- Constructing ApplicationWebServiceRequests\r\n        [DBMode" +
                    "l.Store.ApplicationWebServiceRequests](T1.ApplicationWebServiceRequests_Applicat" +
                    "ionWebServiceRequestID, T1.ApplicationWebServiceRequests_ApplicationWebServiceID" +
                    ", T1.ApplicationWebServiceRequests_ApplicationWebServiceRequestTitle, T1.Applica" +
                    "tionWebServiceRequests_ApplicationWebServiceRequestType, T1.ApplicationWebServic" +
                    "eRequests_ImplementationTypeFullName, T1.ApplicationWebServiceRequests_Descripti" +
                    "on, T1.ApplicationWebServiceRequests_RecordStatus, T1.ApplicationWebServiceReque" +
                    "sts_RecordCreatedBy, T1.ApplicationWebServiceRequests_RecordCreated, T1.Applicat" +
                    "ionWebServiceRequests_RecordLastUpdateBy, T1.ApplicationWebServiceRequests_Recor" +
                    "dLastUpdate)\r\n    FROM (\r\n        SELECT \r\n            T.ApplicationWebServiceRe" +
                    "questID AS ApplicationWebServiceRequests_ApplicationWebServiceRequestID, \r\n     " +
                    "       T.ApplicationWebServiceID AS ApplicationWebServiceRequests_ApplicationWeb" +
                    "ServiceID, \r\n            T.ApplicationWebServiceRequestTitle AS ApplicationWebSe" +
                    "rviceRequests_ApplicationWebServiceRequestTitle, \r\n            T.ApplicationWebS" +
                    "erviceRequestType AS ApplicationWebServiceRequests_ApplicationWebServiceRequestT" +
                    "ype, \r\n            T.ImplementationTypeFullName AS ApplicationWebServiceRequests" +
                    "_ImplementationTypeFullName, \r\n            T.Description AS ApplicationWebServic" +
                    "eRequests_Description, \r\n            T.RecordStatus AS ApplicationWebServiceRequ" +
                    "ests_RecordStatus, \r\n            T.RecordCreatedBy AS ApplicationWebServiceReque" +
                    "sts_RecordCreatedBy, \r\n            T.RecordCreated AS ApplicationWebServiceReque" +
                    "sts_RecordCreated, \r\n            T.RecordLastUpdateBy AS ApplicationWebServiceRe" +
                    "quests_RecordLastUpdateBy, \r\n            T.RecordLastUpdate AS ApplicationWebSer" +
                    "viceRequests_RecordLastUpdate, \r\n            True AS _from0\r\n        FROM DBEnti" +
                    "ties.ApplicationWebServiceRequests AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.IntegrationAdapters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.IntegrationAdapters", "\r\n    SELECT VALUE -- Constructing IntegrationAdapters\r\n        [DBModel.Store.In" +
                    "tegrationAdapters](T1.IntegrationAdapters_IntegrationAdapterID, T1.IntegrationAd" +
                    "apters_IntegrationAdapterTitle, T1.IntegrationAdapters_IntegrationAdapterType, T" +
                    "1.IntegrationAdapters_EndPointType, T1.IntegrationAdapters_ApplicationDatabaseQu" +
                    "eryID, T1.IntegrationAdapters_ApplicationWebServiceRequestID, T1.IntegrationAdap" +
                    "ters_Description, T1.IntegrationAdapters_RecordStatus, T1.IntegrationAdapters_Re" +
                    "cordCreatedBy, T1.IntegrationAdapters_RecordCreated, T1.IntegrationAdapters_Reco" +
                    "rdLastUpdateBy, T1.IntegrationAdapters_RecordLastUpdate)\r\n    FROM (\r\n        SE" +
                    "LECT \r\n            T.IntegrationAdapterID AS IntegrationAdapters_IntegrationAdap" +
                    "terID, \r\n            T.IntegrationAdapterTitle AS IntegrationAdapters_Integratio" +
                    "nAdapterTitle, \r\n            T.IntegrationAdapterType AS IntegrationAdapters_Int" +
                    "egrationAdapterType, \r\n            T.EndPointType AS IntegrationAdapters_EndPoin" +
                    "tType, \r\n            T.ApplicationDatabaseQueryID AS IntegrationAdapters_Applica" +
                    "tionDatabaseQueryID, \r\n            T.ApplicationWebServiceRequestID AS Integrati" +
                    "onAdapters_ApplicationWebServiceRequestID, \r\n            T.Description AS Integr" +
                    "ationAdapters_Description, \r\n            T.RecordStatus AS IntegrationAdapters_R" +
                    "ecordStatus, \r\n            T.RecordCreatedBy AS IntegrationAdapters_RecordCreate" +
                    "dBy, \r\n            T.RecordCreated AS IntegrationAdapters_RecordCreated, \r\n     " +
                    "       T.RecordLastUpdateBy AS IntegrationAdapters_RecordLastUpdateBy, \r\n       " +
                    "     T.RecordLastUpdate AS IntegrationAdapters_RecordLastUpdate, \r\n            T" +
                    "rue AS _from0\r\n        FROM DBEntities.IntegrationAdapters AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.ApplicationDatabases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.ApplicationDatabases", "\r\n    SELECT VALUE -- Constructing ApplicationDatabases\r\n        [DBModel.Store.A" +
                    "pplicationDatabases](T1.ApplicationDatabases_ApplicationDatabaseID, T1.Applicati" +
                    "onDatabases_ApplicationID, T1.ApplicationDatabases_ApplicationDatabaseTitle, T1." +
                    "ApplicationDatabases_ApplicationDatabaseType, T1.ApplicationDatabases_Metadata, " +
                    "T1.ApplicationDatabases_ProviderName, T1.ApplicationDatabases_ProviderConnection" +
                    "String, T1.ApplicationDatabases_Description, T1.ApplicationDatabases_RecordStatu" +
                    "s, T1.ApplicationDatabases_RecordCreatedBy, T1.ApplicationDatabases_RecordCreate" +
                    "d, T1.ApplicationDatabases_RecordLastUpdateBy, T1.ApplicationDatabases_RecordLas" +
                    "tUpdate)\r\n    FROM (\r\n        SELECT \r\n            T.ApplicationDatabaseID AS Ap" +
                    "plicationDatabases_ApplicationDatabaseID, \r\n            T.ApplicationID AS Appli" +
                    "cationDatabases_ApplicationID, \r\n            T.ApplicationDatabaseTitle AS Appli" +
                    "cationDatabases_ApplicationDatabaseTitle, \r\n            T.ApplicationDatabaseTyp" +
                    "e AS ApplicationDatabases_ApplicationDatabaseType, \r\n            T.Metadata AS A" +
                    "pplicationDatabases_Metadata, \r\n            T.ProviderName AS ApplicationDatabas" +
                    "es_ProviderName, \r\n            T.ProviderConnectionString AS ApplicationDatabase" +
                    "s_ProviderConnectionString, \r\n            T.Description AS ApplicationDatabases_" +
                    "Description, \r\n            T.RecordStatus AS ApplicationDatabases_RecordStatus, " +
                    "\r\n            T.RecordCreatedBy AS ApplicationDatabases_RecordCreatedBy, \r\n     " +
                    "       T.RecordCreated AS ApplicationDatabases_RecordCreated, \r\n            T.Re" +
                    "cordLastUpdateBy AS ApplicationDatabases_RecordLastUpdateBy, \r\n            T.Rec" +
                    "ordLastUpdate AS ApplicationDatabases_RecordLastUpdate, \r\n            True AS _f" +
                    "rom0\r\n        FROM DBEntities.ApplicationDatabases AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.Applications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.Applications", @"
    SELECT VALUE -- Constructing Applications
        [DBModel.Store.Applications](T1.Applications_ApplicationID, T1.Applications_ApplicationSymbol, T1.Applications_ApplicationTitle, T1.Applications_ApplicationVersion, T1.Applications_ApplicationProvider, T1.Applications_ApplicationBuisnessArea, T1.Applications_Description, T1.Applications_RecordStatus, T1.Applications_RecordCreatedBy, T1.Applications_RecordCreated, T1.Applications_RecordLastUpdateBy, T1.Applications_RecordLastUpdate)
    FROM (
        SELECT 
            T.ApplicationID AS Applications_ApplicationID, 
            T.ApplicationSymbol AS Applications_ApplicationSymbol, 
            T.ApplicationTitle AS Applications_ApplicationTitle, 
            T.ApplicationVersion AS Applications_ApplicationVersion, 
            T.ApplicationProvider AS Applications_ApplicationProvider, 
            T.ApplicationBuisnessArea AS Applications_ApplicationBuisnessArea, 
            T.Description AS Applications_Description, 
            T.RecordStatus AS Applications_RecordStatus, 
            T.RecordCreatedBy AS Applications_RecordCreatedBy, 
            T.RecordCreated AS Applications_RecordCreated, 
            T.RecordLastUpdateBy AS Applications_RecordLastUpdateBy, 
            T.RecordLastUpdate AS Applications_RecordLastUpdate, 
            True AS _from0
        FROM DBEntities.Applications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.IntegrationAdapterCaches
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.IntegrationAdapterCaches", @"
    SELECT VALUE -- Constructing IntegrationAdapterCaches
        [DBModel.Store.IntegrationAdapterCaches](T1.IntegrationAdapterCaches_IntegrationAdapterCacheID, T1.IntegrationAdapterCaches_IntegrationAdapterID, T1.IntegrationAdapterCaches_CachePrimaryKeys, T1.IntegrationAdapterCaches_CacheStatus, T1.IntegrationAdapterCaches_Description, T1.IntegrationAdapterCaches_RecordStatus, T1.IntegrationAdapterCaches_RecordCreatedBy, T1.IntegrationAdapterCaches_RecordCreated, T1.IntegrationAdapterCaches_RecordLastUpdateBy, T1.IntegrationAdapterCaches_RecordLastUpdate)
    FROM (
        SELECT 
            T.IntegrationAdapterCacheID AS IntegrationAdapterCaches_IntegrationAdapterCacheID, 
            T.IntegrationAdapterID AS IntegrationAdapterCaches_IntegrationAdapterID, 
            T.CachePrimaryKeys AS IntegrationAdapterCaches_CachePrimaryKeys, 
            T.CacheStatus AS IntegrationAdapterCaches_CacheStatus, 
            T.Description AS IntegrationAdapterCaches_Description, 
            T.RecordStatus AS IntegrationAdapterCaches_RecordStatus, 
            T.RecordCreatedBy AS IntegrationAdapterCaches_RecordCreatedBy, 
            T.RecordCreated AS IntegrationAdapterCaches_RecordCreated, 
            T.RecordLastUpdateBy AS IntegrationAdapterCaches_RecordLastUpdateBy, 
            T.RecordLastUpdate AS IntegrationAdapterCaches_RecordLastUpdate, 
            True AS _from0
        FROM DBEntities.IntegrationAdapterCaches AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.ApplicationWebServices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.ApplicationWebServices", "\r\n    SELECT VALUE -- Constructing ApplicationWebServices\r\n        [DBModel.Store" +
                    ".ApplicationWebServices](T1.ApplicationWebServices_ApplicationWebServiceID, T1.A" +
                    "pplicationWebServices_ApplicationID, T1.ApplicationWebServices_ApplicationWebSer" +
                    "viceTitle, T1.ApplicationWebServices_ApplicationWebServiceURL, T1.ApplicationWeb" +
                    "Services_AssemblyFullPath, T1.ApplicationWebServices_Description, T1.Application" +
                    "WebServices_RecordStatus, T1.ApplicationWebServices_RecordCreatedBy, T1.Applicat" +
                    "ionWebServices_RecordCreated, T1.ApplicationWebServices_RecordLastUpdateBy, T1.A" +
                    "pplicationWebServices_RecordLastUpdate)\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.ApplicationWebServiceID AS ApplicationWebServices_ApplicationWebServiceID, \r" +
                    "\n            T.ApplicationID AS ApplicationWebServices_ApplicationID, \r\n        " +
                    "    T.ApplicationWebServiceTitle AS ApplicationWebServices_ApplicationWebService" +
                    "Title, \r\n            T.ApplicationWebServiceURL AS ApplicationWebServices_Applic" +
                    "ationWebServiceURL, \r\n            T.AssemblyFullPath AS ApplicationWebServices_A" +
                    "ssemblyFullPath, \r\n            T.Description AS ApplicationWebServices_Descripti" +
                    "on, \r\n            T.RecordStatus AS ApplicationWebServices_RecordStatus, \r\n     " +
                    "       T.RecordCreatedBy AS ApplicationWebServices_RecordCreatedBy, \r\n          " +
                    "  T.RecordCreated AS ApplicationWebServices_RecordCreated, \r\n            T.Recor" +
                    "dLastUpdateBy AS ApplicationWebServices_RecordLastUpdateBy, \r\n            T.Reco" +
                    "rdLastUpdate AS ApplicationWebServices_RecordLastUpdate, \r\n            True AS _" +
                    "from0\r\n        FROM DBEntities.ApplicationWebServices AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.IntegrationAdapterFields
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.IntegrationAdapterFields", "\r\n    SELECT VALUE -- Constructing IntegrationAdapterFields\r\n        [DBModel.Int" +
                    "egrationAdapterField](T1.IntegrationAdapterField_IntegrationAdapterFieldID, T1.I" +
                    "ntegrationAdapterField_IntegrationAdapterID, T1.IntegrationAdapterField_FieldCat" +
                    "egory, T1.IntegrationAdapterField_FieldName, T1.IntegrationAdapterField_FieldDat" +
                    "aType, T1.IntegrationAdapterField_IsPrimaryKey, T1.IntegrationAdapterField_Descr" +
                    "iption, T1.IntegrationAdapterField_RecordStatus, T1.IntegrationAdapterField_Reco" +
                    "rdCreatedBy, T1.IntegrationAdapterField_RecordCreated, T1.IntegrationAdapterFiel" +
                    "d_RecordLastUpdateBy, T1.IntegrationAdapterField_RecordLastUpdate, T1.Integratio" +
                    "nAdapterField_PrimaryKeySequence)\r\n    FROM (\r\n        SELECT \r\n            T.In" +
                    "tegrationAdapterFieldID AS IntegrationAdapterField_IntegrationAdapterFieldID, \r\n" +
                    "            T.IntegrationAdapterID AS IntegrationAdapterField_IntegrationAdapter" +
                    "ID, \r\n            T.FieldCategory AS IntegrationAdapterField_FieldCategory, \r\n  " +
                    "          T.FieldName AS IntegrationAdapterField_FieldName, \r\n            T.Fiel" +
                    "dDataType AS IntegrationAdapterField_FieldDataType, \r\n            T.IsPrimaryKey" +
                    " AS IntegrationAdapterField_IsPrimaryKey, \r\n            T.Description AS Integra" +
                    "tionAdapterField_Description, \r\n            T.RecordStatus AS IntegrationAdapter" +
                    "Field_RecordStatus, \r\n            T.RecordCreatedBy AS IntegrationAdapterField_R" +
                    "ecordCreatedBy, \r\n            T.RecordCreated AS IntegrationAdapterField_RecordC" +
                    "reated, \r\n            T.RecordLastUpdateBy AS IntegrationAdapterField_RecordLast" +
                    "UpdateBy, \r\n            T.RecordLastUpdate AS IntegrationAdapterField_RecordLast" +
                    "Update, \r\n            T.PrimaryKeySequence AS IntegrationAdapterField_PrimaryKey" +
                    "Sequence, \r\n            True AS _from0\r\n        FROM DBModelStoreContainer.Integ" +
                    "rationAdapterFields AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.IntegrationProcesses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.IntegrationProcesses", "\r\n    SELECT VALUE -- Constructing IntegrationProcesses\r\n        [DBModel.Integra" +
                    "tionProcess](T1.IntegrationProcess_IntegrationProcessID, T1.IntegrationProcess_I" +
                    "ntegrationProcessCode, T1.IntegrationProcess_IntegrationProcessTitle, T1.Integra" +
                    "tionProcess_SourceIntegrationAdapterID, T1.IntegrationProcess_DestinationIntegra" +
                    "tionAdapterID, T1.IntegrationProcess_Description, T1.IntegrationProcess_RecordSt" +
                    "atus, T1.IntegrationProcess_RecordCreatedBy, T1.IntegrationProcess_RecordCreated" +
                    ", T1.IntegrationProcess_RecordLastUpdateBy, T1.IntegrationProcess_RecordLastUpda" +
                    "te)\r\n    FROM (\r\n        SELECT \r\n            T.IntegrationProcessID AS Integrat" +
                    "ionProcess_IntegrationProcessID, \r\n            T.IntegrationProcessCode AS Integ" +
                    "rationProcess_IntegrationProcessCode, \r\n            T.IntegrationProcessTitle AS" +
                    " IntegrationProcess_IntegrationProcessTitle, \r\n            T.SourceIntegrationAd" +
                    "apterID AS IntegrationProcess_SourceIntegrationAdapterID, \r\n            T.Destin" +
                    "ationIntegrationAdapterID AS IntegrationProcess_DestinationIntegrationAdapterID," +
                    " \r\n            T.Description AS IntegrationProcess_Description, \r\n            T." +
                    "RecordStatus AS IntegrationProcess_RecordStatus, \r\n            T.RecordCreatedBy" +
                    " AS IntegrationProcess_RecordCreatedBy, \r\n            T.RecordCreated AS Integra" +
                    "tionProcess_RecordCreated, \r\n            T.RecordLastUpdateBy AS IntegrationProc" +
                    "ess_RecordLastUpdateBy, \r\n            T.RecordLastUpdate AS IntegrationProcess_R" +
                    "ecordLastUpdate, \r\n            True AS _from0\r\n        FROM DBModelStoreContaine" +
                    "r.IntegrationProcesses AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.IntegrationProcessMappings
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.IntegrationProcessMappings", "\r\n    SELECT VALUE -- Constructing IntegrationProcessMappings\r\n        [DBModel.I" +
                    "ntegrationProcessMapping](T1.IntegrationProcessMapping_IntegrationProcessMapping" +
                    "ID, T1.IntegrationProcessMapping_IntegrationProcessID, T1.IntegrationProcessMapp" +
                    "ing_SourceIntegrationAdapterFieldID, T1.IntegrationProcessMapping_DestinationInt" +
                    "egrationAdapterFieldID, T1.IntegrationProcessMapping_Description, T1.Integration" +
                    "ProcessMapping_RecordStatus, T1.IntegrationProcessMapping_RecordCreatedBy, T1.In" +
                    "tegrationProcessMapping_RecordCreated, T1.IntegrationProcessMapping_RecordLastUp" +
                    "dateBy, T1.IntegrationProcessMapping_RecordLastUpdate)\r\n    FROM (\r\n        SELE" +
                    "CT \r\n            T.IntegrationProcessMappingID AS IntegrationProcessMapping_Inte" +
                    "grationProcessMappingID, \r\n            T.IntegrationProcessID AS IntegrationProc" +
                    "essMapping_IntegrationProcessID, \r\n            T.SourceIntegrationAdapterFieldID" +
                    " AS IntegrationProcessMapping_SourceIntegrationAdapterFieldID, \r\n            T.D" +
                    "estinationIntegrationAdapterFieldID AS IntegrationProcessMapping_DestinationInte" +
                    "grationAdapterFieldID, \r\n            T.Description AS IntegrationProcessMapping_" +
                    "Description, \r\n            T.RecordStatus AS IntegrationProcessMapping_RecordSta" +
                    "tus, \r\n            T.RecordCreatedBy AS IntegrationProcessMapping_RecordCreatedB" +
                    "y, \r\n            T.RecordCreated AS IntegrationProcessMapping_RecordCreated, \r\n " +
                    "           T.RecordLastUpdateBy AS IntegrationProcessMapping_RecordLastUpdateBy," +
                    " \r\n            T.RecordLastUpdate AS IntegrationProcessMapping_RecordLastUpdate," +
                    " \r\n            True AS _from0\r\n        FROM DBModelStoreContainer.IntegrationPro" +
                    "cessMappings AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.IntegrationTransactionDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.IntegrationTransactionDetails", "\r\n    SELECT VALUE -- Constructing IntegrationTransactionDetails\r\n        [DBMode" +
                    "l.IntegrationTransactionDetail](T1.IntegrationTransactionDetail_IntegrationTrans" +
                    "actionDetailID, T1.IntegrationTransactionDetail_IntegrationTransactionID, T1.Int" +
                    "egrationTransactionDetail_IntegrationTransactionDetailStatus, T1.IntegrationTran" +
                    "sactionDetail_IntegrationTransactionDetailData, T1.IntegrationTransactionDetail_" +
                    "Description, T1.IntegrationTransactionDetail_RecordStatus, T1.IntegrationTransac" +
                    "tionDetail_RecordCreatedBy, T1.IntegrationTransactionDetail_RecordCreated, T1.In" +
                    "tegrationTransactionDetail_RecordLastUpdateBy, T1.IntegrationTransactionDetail_R" +
                    "ecordLastUpdate)\r\n    FROM (\r\n        SELECT \r\n            T.IntegrationTransact" +
                    "ionDetailID AS IntegrationTransactionDetail_IntegrationTransactionDetailID, \r\n  " +
                    "          T.IntegrationTransactionID AS IntegrationTransactionDetail_Integration" +
                    "TransactionID, \r\n            T.IntegrationTransactionDetailStatus AS Integration" +
                    "TransactionDetail_IntegrationTransactionDetailStatus, \r\n            T.Integratio" +
                    "nTransactionDetailData AS IntegrationTransactionDetail_IntegrationTransactionDet" +
                    "ailData, \r\n            T.Description AS IntegrationTransactionDetail_Description" +
                    ", \r\n            T.RecordStatus AS IntegrationTransactionDetail_RecordStatus, \r\n " +
                    "           T.RecordCreatedBy AS IntegrationTransactionDetail_RecordCreatedBy, \r\n" +
                    "            T.RecordCreated AS IntegrationTransactionDetail_RecordCreated, \r\n   " +
                    "         T.RecordLastUpdateBy AS IntegrationTransactionDetail_RecordLastUpdateBy" +
                    ", \r\n            T.RecordLastUpdate AS IntegrationTransactionDetail_RecordLastUpd" +
                    "ate, \r\n            True AS _from0\r\n        FROM DBModelStoreContainer.Integratio" +
                    "nTransactionDetails AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.IntegrationTransactions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.IntegrationTransactions", "\r\n    SELECT VALUE -- Constructing IntegrationTransactions\r\n        [DBModel.Inte" +
                    "grationTransaction](T1.IntegrationTransaction_IntegrationTransactionID, T1.Integ" +
                    "rationTransaction_IntegrationTransactionTitle, T1.IntegrationTransaction_Integra" +
                    "tionTransactionDate, T1.IntegrationTransaction_IntegrationProcessID, T1.Integrat" +
                    "ionTransaction_TransactionStatus, T1.IntegrationTransaction_Description, T1.Inte" +
                    "grationTransaction_RecordStatus, T1.IntegrationTransaction_RecordCreatedBy, T1.I" +
                    "ntegrationTransaction_RecordCreated, T1.IntegrationTransaction_RecordLastUpdateB" +
                    "y, T1.IntegrationTransaction_RecordLastUpdate)\r\n    FROM (\r\n        SELECT \r\n   " +
                    "         T.IntegrationTransactionID AS IntegrationTransaction_IntegrationTransac" +
                    "tionID, \r\n            T.IntegrationTransactionTitle AS IntegrationTransaction_In" +
                    "tegrationTransactionTitle, \r\n            T.IntegrationTransactionDate AS Integra" +
                    "tionTransaction_IntegrationTransactionDate, \r\n            T.IntegrationProcessID" +
                    " AS IntegrationTransaction_IntegrationProcessID, \r\n            T.TransactionStat" +
                    "us AS IntegrationTransaction_TransactionStatus, \r\n            T.Description AS I" +
                    "ntegrationTransaction_Description, \r\n            T.RecordStatus AS IntegrationTr" +
                    "ansaction_RecordStatus, \r\n            T.RecordCreatedBy AS IntegrationTransactio" +
                    "n_RecordCreatedBy, \r\n            T.RecordCreated AS IntegrationTransaction_Recor" +
                    "dCreated, \r\n            T.RecordLastUpdateBy AS IntegrationTransaction_RecordLas" +
                    "tUpdateBy, \r\n            T.RecordLastUpdate AS IntegrationTransaction_RecordLast" +
                    "Update, \r\n            True AS _from0\r\n        FROM DBModelStoreContainer.Integra" +
                    "tionTransactions AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.ApplicationDatabaseQueries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.ApplicationDatabaseQueries", "\r\n    SELECT VALUE -- Constructing ApplicationDatabaseQueries\r\n        [DBModel.A" +
                    "pplicationDatabaseQuery](T1.ApplicationDatabaseQuery_ApplicationDatabaseQueryID," +
                    " T1.ApplicationDatabaseQuery_ApplicationDatabaseID, T1.ApplicationDatabaseQuery_" +
                    "ApplicationDatabaseQueryTitle, T1.ApplicationDatabaseQuery_ApplicationDatabaseQu" +
                    "eryType, T1.ApplicationDatabaseQuery_ApplicationDatabaseQueryCommand, T1.Applica" +
                    "tionDatabaseQuery_IsAsync, T1.ApplicationDatabaseQuery_Description, T1.Applicati" +
                    "onDatabaseQuery_RecordStatus, T1.ApplicationDatabaseQuery_RecordCreatedBy, T1.Ap" +
                    "plicationDatabaseQuery_RecordCreated, T1.ApplicationDatabaseQuery_RecordLastUpda" +
                    "teBy, T1.ApplicationDatabaseQuery_RecordLastUpdate)\r\n    FROM (\r\n        SELECT " +
                    "\r\n            T.ApplicationDatabaseQueryID AS ApplicationDatabaseQuery_Applicati" +
                    "onDatabaseQueryID, \r\n            T.ApplicationDatabaseID AS ApplicationDatabaseQ" +
                    "uery_ApplicationDatabaseID, \r\n            T.ApplicationDatabaseQueryTitle AS App" +
                    "licationDatabaseQuery_ApplicationDatabaseQueryTitle, \r\n            T.Application" +
                    "DatabaseQueryType AS ApplicationDatabaseQuery_ApplicationDatabaseQueryType, \r\n  " +
                    "          T.ApplicationDatabaseQueryCommand AS ApplicationDatabaseQuery_Applicat" +
                    "ionDatabaseQueryCommand, \r\n            T.IsAsync AS ApplicationDatabaseQuery_IsA" +
                    "sync, \r\n            T.Description AS ApplicationDatabaseQuery_Description, \r\n   " +
                    "         T.RecordStatus AS ApplicationDatabaseQuery_RecordStatus, \r\n            " +
                    "T.RecordCreatedBy AS ApplicationDatabaseQuery_RecordCreatedBy, \r\n            T.R" +
                    "ecordCreated AS ApplicationDatabaseQuery_RecordCreated, \r\n            T.RecordLa" +
                    "stUpdateBy AS ApplicationDatabaseQuery_RecordLastUpdateBy, \r\n            T.Recor" +
                    "dLastUpdate AS ApplicationDatabaseQuery_RecordLastUpdate, \r\n            True AS " +
                    "_from0\r\n        FROM DBModelStoreContainer.ApplicationDatabaseQueries AS T\r\n    " +
                    ") AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.ApplicationWebServiceRequests
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.ApplicationWebServiceRequests", "\r\n    SELECT VALUE -- Constructing ApplicationWebServiceRequests\r\n        [DBMode" +
                    "l.ApplicationWebServiceRequest](T1.ApplicationWebServiceRequest_ApplicationWebSe" +
                    "rviceRequestID, T1.ApplicationWebServiceRequest_ApplicationWebServiceID, T1.Appl" +
                    "icationWebServiceRequest_ApplicationWebServiceRequestTitle, T1.ApplicationWebSer" +
                    "viceRequest_ApplicationWebServiceRequestType, T1.ApplicationWebServiceRequest_Im" +
                    "plementationTypeFullName, T1.ApplicationWebServiceRequest_Description, T1.Applic" +
                    "ationWebServiceRequest_RecordStatus, T1.ApplicationWebServiceRequest_RecordCreat" +
                    "edBy, T1.ApplicationWebServiceRequest_RecordCreated, T1.ApplicationWebServiceReq" +
                    "uest_RecordLastUpdateBy, T1.ApplicationWebServiceRequest_RecordLastUpdate)\r\n    " +
                    "FROM (\r\n        SELECT \r\n            T.ApplicationWebServiceRequestID AS Applica" +
                    "tionWebServiceRequest_ApplicationWebServiceRequestID, \r\n            T.Applicatio" +
                    "nWebServiceID AS ApplicationWebServiceRequest_ApplicationWebServiceID, \r\n       " +
                    "     T.ApplicationWebServiceRequestTitle AS ApplicationWebServiceRequest_Applica" +
                    "tionWebServiceRequestTitle, \r\n            T.ApplicationWebServiceRequestType AS " +
                    "ApplicationWebServiceRequest_ApplicationWebServiceRequestType, \r\n            T.I" +
                    "mplementationTypeFullName AS ApplicationWebServiceRequest_ImplementationTypeFull" +
                    "Name, \r\n            T.Description AS ApplicationWebServiceRequest_Description, \r" +
                    "\n            T.RecordStatus AS ApplicationWebServiceRequest_RecordStatus, \r\n    " +
                    "        T.RecordCreatedBy AS ApplicationWebServiceRequest_RecordCreatedBy, \r\n   " +
                    "         T.RecordCreated AS ApplicationWebServiceRequest_RecordCreated, \r\n      " +
                    "      T.RecordLastUpdateBy AS ApplicationWebServiceRequest_RecordLastUpdateBy, \r" +
                    "\n            T.RecordLastUpdate AS ApplicationWebServiceRequest_RecordLastUpdate" +
                    ", \r\n            True AS _from0\r\n        FROM DBModelStoreContainer.ApplicationWe" +
                    "bServiceRequests AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.IntegrationAdapters
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.IntegrationAdapters", "\r\n    SELECT VALUE -- Constructing IntegrationAdapters\r\n        [DBModel.Integrat" +
                    "ionAdapter](T1.IntegrationAdapter_IntegrationAdapterID, T1.IntegrationAdapter_In" +
                    "tegrationAdapterTitle, T1.IntegrationAdapter_IntegrationAdapterType, T1.Integrat" +
                    "ionAdapter_EndPointType, T1.IntegrationAdapter_ApplicationDatabaseQueryID, T1.In" +
                    "tegrationAdapter_ApplicationWebServiceRequestID, T1.IntegrationAdapter_Descripti" +
                    "on, T1.IntegrationAdapter_RecordStatus, T1.IntegrationAdapter_RecordCreatedBy, T" +
                    "1.IntegrationAdapter_RecordCreated, T1.IntegrationAdapter_RecordLastUpdateBy, T1" +
                    ".IntegrationAdapter_RecordLastUpdate)\r\n    FROM (\r\n        SELECT \r\n            " +
                    "T.IntegrationAdapterID AS IntegrationAdapter_IntegrationAdapterID, \r\n           " +
                    " T.IntegrationAdapterTitle AS IntegrationAdapter_IntegrationAdapterTitle, \r\n    " +
                    "        T.IntegrationAdapterType AS IntegrationAdapter_IntegrationAdapterType, \r" +
                    "\n            T.EndPointType AS IntegrationAdapter_EndPointType, \r\n            T." +
                    "ApplicationDatabaseQueryID AS IntegrationAdapter_ApplicationDatabaseQueryID, \r\n " +
                    "           T.ApplicationWebServiceRequestID AS IntegrationAdapter_ApplicationWeb" +
                    "ServiceRequestID, \r\n            T.Description AS IntegrationAdapter_Description," +
                    " \r\n            T.RecordStatus AS IntegrationAdapter_RecordStatus, \r\n            " +
                    "T.RecordCreatedBy AS IntegrationAdapter_RecordCreatedBy, \r\n            T.RecordC" +
                    "reated AS IntegrationAdapter_RecordCreated, \r\n            T.RecordLastUpdateBy A" +
                    "S IntegrationAdapter_RecordLastUpdateBy, \r\n            T.RecordLastUpdate AS Int" +
                    "egrationAdapter_RecordLastUpdate, \r\n            True AS _from0\r\n        FROM DBM" +
                    "odelStoreContainer.IntegrationAdapters AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.ApplicationDatabases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.ApplicationDatabases", "\r\n    SELECT VALUE -- Constructing ApplicationDatabases\r\n        [DBModel.Applica" +
                    "tionDatabas](T1.ApplicationDatabas_ApplicationDatabaseID, T1.ApplicationDatabas_" +
                    "ApplicationID, T1.ApplicationDatabas_ApplicationDatabaseTitle, T1.ApplicationDat" +
                    "abas_ApplicationDatabaseType, T1.ApplicationDatabas_Metadata, T1.ApplicationData" +
                    "bas_ProviderName, T1.ApplicationDatabas_ProviderConnectionString, T1.Application" +
                    "Databas_Description, T1.ApplicationDatabas_RecordStatus, T1.ApplicationDatabas_R" +
                    "ecordCreatedBy, T1.ApplicationDatabas_RecordCreated, T1.ApplicationDatabas_Recor" +
                    "dLastUpdateBy, T1.ApplicationDatabas_RecordLastUpdate)\r\n    FROM (\r\n        SELE" +
                    "CT \r\n            T.ApplicationDatabaseID AS ApplicationDatabas_ApplicationDataba" +
                    "seID, \r\n            T.ApplicationID AS ApplicationDatabas_ApplicationID, \r\n     " +
                    "       T.ApplicationDatabaseTitle AS ApplicationDatabas_ApplicationDatabaseTitle" +
                    ", \r\n            T.ApplicationDatabaseType AS ApplicationDatabas_ApplicationDatab" +
                    "aseType, \r\n            T.Metadata AS ApplicationDatabas_Metadata, \r\n            " +
                    "T.ProviderName AS ApplicationDatabas_ProviderName, \r\n            T.ProviderConne" +
                    "ctionString AS ApplicationDatabas_ProviderConnectionString, \r\n            T.Desc" +
                    "ription AS ApplicationDatabas_Description, \r\n            T.RecordStatus AS Appli" +
                    "cationDatabas_RecordStatus, \r\n            T.RecordCreatedBy AS ApplicationDataba" +
                    "s_RecordCreatedBy, \r\n            T.RecordCreated AS ApplicationDatabas_RecordCre" +
                    "ated, \r\n            T.RecordLastUpdateBy AS ApplicationDatabas_RecordLastUpdateB" +
                    "y, \r\n            T.RecordLastUpdate AS ApplicationDatabas_RecordLastUpdate, \r\n  " +
                    "          True AS _from0\r\n        FROM DBModelStoreContainer.ApplicationDatabase" +
                    "s AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.Applications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.Applications", @"
    SELECT VALUE -- Constructing Applications
        [DBModel.Application](T1.Application_ApplicationID, T1.Application_ApplicationSymbol, T1.Application_ApplicationTitle, T1.Application_ApplicationVersion, T1.Application_ApplicationProvider, T1.Application_ApplicationBuisnessArea, T1.Application_Description, T1.Application_RecordStatus, T1.Application_RecordCreatedBy, T1.Application_RecordCreated, T1.Application_RecordLastUpdateBy, T1.Application_RecordLastUpdate)
    FROM (
        SELECT 
            T.ApplicationID AS Application_ApplicationID, 
            T.ApplicationSymbol AS Application_ApplicationSymbol, 
            T.ApplicationTitle AS Application_ApplicationTitle, 
            T.ApplicationVersion AS Application_ApplicationVersion, 
            T.ApplicationProvider AS Application_ApplicationProvider, 
            T.ApplicationBuisnessArea AS Application_ApplicationBuisnessArea, 
            T.Description AS Application_Description, 
            T.RecordStatus AS Application_RecordStatus, 
            T.RecordCreatedBy AS Application_RecordCreatedBy, 
            T.RecordCreated AS Application_RecordCreated, 
            T.RecordLastUpdateBy AS Application_RecordLastUpdateBy, 
            T.RecordLastUpdate AS Application_RecordLastUpdate, 
            True AS _from0
        FROM DBModelStoreContainer.Applications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.IntegrationAdapterCaches
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.IntegrationAdapterCaches", @"
    SELECT VALUE -- Constructing IntegrationAdapterCaches
        [DBModel.IntegrationAdapterCach](T1.IntegrationAdapterCach_IntegrationAdapterCacheID, T1.IntegrationAdapterCach_IntegrationAdapterID, T1.IntegrationAdapterCach_CachePrimaryKeys, T1.IntegrationAdapterCach_CacheStatus, T1.IntegrationAdapterCach_Description, T1.IntegrationAdapterCach_RecordStatus, T1.IntegrationAdapterCach_RecordCreatedBy, T1.IntegrationAdapterCach_RecordCreated, T1.IntegrationAdapterCach_RecordLastUpdateBy, T1.IntegrationAdapterCach_RecordLastUpdate)
    FROM (
        SELECT 
            T.IntegrationAdapterCacheID AS IntegrationAdapterCach_IntegrationAdapterCacheID, 
            T.IntegrationAdapterID AS IntegrationAdapterCach_IntegrationAdapterID, 
            T.CachePrimaryKeys AS IntegrationAdapterCach_CachePrimaryKeys, 
            T.CacheStatus AS IntegrationAdapterCach_CacheStatus, 
            T.Description AS IntegrationAdapterCach_Description, 
            T.RecordStatus AS IntegrationAdapterCach_RecordStatus, 
            T.RecordCreatedBy AS IntegrationAdapterCach_RecordCreatedBy, 
            T.RecordCreated AS IntegrationAdapterCach_RecordCreated, 
            T.RecordLastUpdateBy AS IntegrationAdapterCach_RecordLastUpdateBy, 
            T.RecordLastUpdate AS IntegrationAdapterCach_RecordLastUpdate, 
            True AS _from0
        FROM DBModelStoreContainer.IntegrationAdapterCaches AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.ApplicationWebServices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.ApplicationWebServices", "\r\n    SELECT VALUE -- Constructing ApplicationWebServices\r\n        [DBModel.Appli" +
                    "cationWebService](T1.ApplicationWebService_ApplicationWebServiceID, T1.Applicati" +
                    "onWebService_ApplicationID, T1.ApplicationWebService_ApplicationWebServiceTitle," +
                    " T1.ApplicationWebService_ApplicationWebServiceURL, T1.ApplicationWebService_Ass" +
                    "emblyFullPath, T1.ApplicationWebService_Description, T1.ApplicationWebService_Re" +
                    "cordStatus, T1.ApplicationWebService_RecordCreatedBy, T1.ApplicationWebService_R" +
                    "ecordCreated, T1.ApplicationWebService_RecordLastUpdateBy, T1.ApplicationWebServ" +
                    "ice_RecordLastUpdate)\r\n    FROM (\r\n        SELECT \r\n            T.ApplicationWeb" +
                    "ServiceID AS ApplicationWebService_ApplicationWebServiceID, \r\n            T.Appl" +
                    "icationID AS ApplicationWebService_ApplicationID, \r\n            T.ApplicationWeb" +
                    "ServiceTitle AS ApplicationWebService_ApplicationWebServiceTitle, \r\n            " +
                    "T.ApplicationWebServiceURL AS ApplicationWebService_ApplicationWebServiceURL, \r\n" +
                    "            T.AssemblyFullPath AS ApplicationWebService_AssemblyFullPath, \r\n    " +
                    "        T.Description AS ApplicationWebService_Description, \r\n            T.Reco" +
                    "rdStatus AS ApplicationWebService_RecordStatus, \r\n            T.RecordCreatedBy " +
                    "AS ApplicationWebService_RecordCreatedBy, \r\n            T.RecordCreated AS Appli" +
                    "cationWebService_RecordCreated, \r\n            T.RecordLastUpdateBy AS Applicatio" +
                    "nWebService_RecordLastUpdateBy, \r\n            T.RecordLastUpdate AS ApplicationW" +
                    "ebService_RecordLastUpdate, \r\n            True AS _from0\r\n        FROM DBModelSt" +
                    "oreContainer.ApplicationWebServices AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.SystemGroupObjects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.SystemGroupObjects", @"
    SELECT VALUE -- Constructing SystemGroupObjects
        [DBModel.Store.SystemGroupObjects](T1.SystemGroupObjects_SystemGroupObjectID, T1.SystemGroupObjects_SystemGroupID, T1.SystemGroupObjects_SystemObjectID, T1.SystemGroupObjects_IsActive, T1.SystemGroupObjects_Description, T1.SystemGroupObjects_CreationUserID, T1.SystemGroupObjects_CreationDate, T1.SystemGroupObjects_LastUpdateUserID, T1.SystemGroupObjects_LastUpdate)
    FROM (
        SELECT 
            T.SystemGroupObjectID AS SystemGroupObjects_SystemGroupObjectID, 
            T.SystemGroupID AS SystemGroupObjects_SystemGroupID, 
            T.SystemObjectID AS SystemGroupObjects_SystemObjectID, 
            T.IsActive AS SystemGroupObjects_IsActive, 
            T.Description AS SystemGroupObjects_Description, 
            T.CreationUserID AS SystemGroupObjects_CreationUserID, 
            T.CreationDate AS SystemGroupObjects_CreationDate, 
            T.LastUpdateUserID AS SystemGroupObjects_LastUpdateUserID, 
            T.LastUpdate AS SystemGroupObjects_LastUpdate, 
            True AS _from0
        FROM DBEntities.SystemGroupObjects AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.SystemGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.SystemGroups", @"
    SELECT VALUE -- Constructing SystemGroups
        [DBModel.Store.SystemGroups](T1.SystemGroups_SystemGroupID, T1.SystemGroups_SystemGroupName, T1.SystemGroups_IsActive, T1.SystemGroups_Description, T1.SystemGroups_CreationUserID, T1.SystemGroups_CreationDate, T1.SystemGroups_LastUpdateUserID, T1.SystemGroups_LastUpdate)
    FROM (
        SELECT 
            T.SystemGroupID AS SystemGroups_SystemGroupID, 
            T.SystemGroupName AS SystemGroups_SystemGroupName, 
            T.IsActive AS SystemGroups_IsActive, 
            T.Description AS SystemGroups_Description, 
            T.CreationUserID AS SystemGroups_CreationUserID, 
            T.CreationDate AS SystemGroups_CreationDate, 
            T.LastUpdateUserID AS SystemGroups_LastUpdateUserID, 
            T.LastUpdate AS SystemGroups_LastUpdate, 
            True AS _from0
        FROM DBEntities.SystemGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.SystemObjects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.SystemObjects", @"
    SELECT VALUE -- Constructing SystemObjects
        [DBModel.Store.SystemObjects](T1.SystemObjects_SystemObjectID, T1.SystemObjects_SystemObjectType, T1.SystemObjects_SystemObjectIdentifier, T1.SystemObjects_IsActive, T1.SystemObjects_Description, T1.SystemObjects_CreationUserID, T1.SystemObjects_CreationDate, T1.SystemObjects_LastUpdateUserID, T1.SystemObjects_LastUpdate)
    FROM (
        SELECT 
            T.SystemObjectID AS SystemObjects_SystemObjectID, 
            T.SystemObjectType AS SystemObjects_SystemObjectType, 
            T.SystemObjectIdentifier AS SystemObjects_SystemObjectIdentifier, 
            T.IsActive AS SystemObjects_IsActive, 
            T.Description AS SystemObjects_Description, 
            T.CreationUserID AS SystemObjects_CreationUserID, 
            T.CreationDate AS SystemObjects_CreationDate, 
            T.LastUpdateUserID AS SystemObjects_LastUpdateUserID, 
            T.LastUpdate AS SystemObjects_LastUpdate, 
            True AS _from0
        FROM DBEntities.SystemObjects AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.SystemUserGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.SystemUserGroups", @"
    SELECT VALUE -- Constructing SystemUserGroups
        [DBModel.Store.SystemUserGroups](T1.SystemUserGroups_SystemUserGroupID, T1.SystemUserGroups_SystemUserID, T1.SystemUserGroups_SystemGroupID, T1.SystemUserGroups_IsActive, T1.SystemUserGroups_Description, T1.SystemUserGroups_CreationUserID, T1.SystemUserGroups_CreationDate, T1.SystemUserGroups_LastUpdateUserID, T1.SystemUserGroups_LastUpdate)
    FROM (
        SELECT 
            T.SystemUserGroupID AS SystemUserGroups_SystemUserGroupID, 
            T.SystemUserID AS SystemUserGroups_SystemUserID, 
            T.SystemGroupID AS SystemUserGroups_SystemGroupID, 
            T.IsActive AS SystemUserGroups_IsActive, 
            T.Description AS SystemUserGroups_Description, 
            T.CreationUserID AS SystemUserGroups_CreationUserID, 
            T.CreationDate AS SystemUserGroups_CreationDate, 
            T.LastUpdateUserID AS SystemUserGroups_LastUpdateUserID, 
            T.LastUpdate AS SystemUserGroups_LastUpdate, 
            True AS _from0
        FROM DBEntities.SystemUserGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBModelStoreContainer.SystemUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBModelStoreContainer.SystemUsers", @"
    SELECT VALUE -- Constructing SystemUsers
        [DBModel.Store.SystemUsers](T1.SystemUsers_SystemUserID, T1.SystemUsers_SystemUserNetworkID, T1.SystemUsers_SystemUserFullName, T1.SystemUsers_IsActive, T1.SystemUsers_Description, T1.SystemUsers_CreationUserID, T1.SystemUsers_CreationDate, T1.SystemUsers_LastUpdateUserID, T1.SystemUsers_LastUpdate)
    FROM (
        SELECT 
            T.SystemUserID AS SystemUsers_SystemUserID, 
            T.SystemUserNetworkID AS SystemUsers_SystemUserNetworkID, 
            T.SystemUserFullName AS SystemUsers_SystemUserFullName, 
            T.IsActive AS SystemUsers_IsActive, 
            T.Description AS SystemUsers_Description, 
            T.CreationUserID AS SystemUsers_CreationUserID, 
            T.CreationDate AS SystemUsers_CreationDate, 
            T.LastUpdateUserID AS SystemUsers_LastUpdateUserID, 
            T.LastUpdate AS SystemUsers_LastUpdate, 
            True AS _from0
        FROM DBEntities.SystemUsers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.SystemGroupObjects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.SystemGroupObjects", @"
    SELECT VALUE -- Constructing SystemGroupObjects
        [DBModel.SystemGroupObject](T1.SystemGroupObject_SystemGroupObjectID, T1.SystemGroupObject_SystemGroupID, T1.SystemGroupObject_SystemObjectID, T1.SystemGroupObject_IsActive, T1.SystemGroupObject_Description, T1.SystemGroupObject_CreationUserID, T1.SystemGroupObject_CreationDate, T1.SystemGroupObject_LastUpdateUserID, T1.SystemGroupObject_LastUpdate)
    FROM (
        SELECT 
            T.SystemGroupObjectID AS SystemGroupObject_SystemGroupObjectID, 
            T.SystemGroupID AS SystemGroupObject_SystemGroupID, 
            T.SystemObjectID AS SystemGroupObject_SystemObjectID, 
            T.IsActive AS SystemGroupObject_IsActive, 
            T.Description AS SystemGroupObject_Description, 
            T.CreationUserID AS SystemGroupObject_CreationUserID, 
            T.CreationDate AS SystemGroupObject_CreationDate, 
            T.LastUpdateUserID AS SystemGroupObject_LastUpdateUserID, 
            T.LastUpdate AS SystemGroupObject_LastUpdate, 
            True AS _from0
        FROM DBModelStoreContainer.SystemGroupObjects AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.SystemGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.SystemGroups", @"
    SELECT VALUE -- Constructing SystemGroups
        [DBModel.SystemGroup](T1.SystemGroup_SystemGroupID, T1.SystemGroup_SystemGroupName, T1.SystemGroup_IsActive, T1.SystemGroup_Description, T1.SystemGroup_CreationUserID, T1.SystemGroup_CreationDate, T1.SystemGroup_LastUpdateUserID, T1.SystemGroup_LastUpdate)
    FROM (
        SELECT 
            T.SystemGroupID AS SystemGroup_SystemGroupID, 
            T.SystemGroupName AS SystemGroup_SystemGroupName, 
            T.IsActive AS SystemGroup_IsActive, 
            T.Description AS SystemGroup_Description, 
            T.CreationUserID AS SystemGroup_CreationUserID, 
            T.CreationDate AS SystemGroup_CreationDate, 
            T.LastUpdateUserID AS SystemGroup_LastUpdateUserID, 
            T.LastUpdate AS SystemGroup_LastUpdate, 
            True AS _from0
        FROM DBModelStoreContainer.SystemGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.SystemObjects
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.SystemObjects", @"
    SELECT VALUE -- Constructing SystemObjects
        [DBModel.SystemObject](T1.SystemObject_SystemObjectID, T1.SystemObject_SystemObjectType, T1.SystemObject_SystemObjectIdentifier, T1.SystemObject_IsActive, T1.SystemObject_Description, T1.SystemObject_CreationUserID, T1.SystemObject_CreationDate, T1.SystemObject_LastUpdateUserID, T1.SystemObject_LastUpdate)
    FROM (
        SELECT 
            T.SystemObjectID AS SystemObject_SystemObjectID, 
            T.SystemObjectType AS SystemObject_SystemObjectType, 
            T.SystemObjectIdentifier AS SystemObject_SystemObjectIdentifier, 
            T.IsActive AS SystemObject_IsActive, 
            T.Description AS SystemObject_Description, 
            T.CreationUserID AS SystemObject_CreationUserID, 
            T.CreationDate AS SystemObject_CreationDate, 
            T.LastUpdateUserID AS SystemObject_LastUpdateUserID, 
            T.LastUpdate AS SystemObject_LastUpdate, 
            True AS _from0
        FROM DBModelStoreContainer.SystemObjects AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.SystemUserGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.SystemUserGroups", @"
    SELECT VALUE -- Constructing SystemUserGroups
        [DBModel.SystemUserGroup](T1.SystemUserGroup_SystemUserGroupID, T1.SystemUserGroup_SystemUserID, T1.SystemUserGroup_SystemGroupID, T1.SystemUserGroup_IsActive, T1.SystemUserGroup_Description, T1.SystemUserGroup_CreationUserID, T1.SystemUserGroup_CreationDate, T1.SystemUserGroup_LastUpdateUserID, T1.SystemUserGroup_LastUpdate)
    FROM (
        SELECT 
            T.SystemUserGroupID AS SystemUserGroup_SystemUserGroupID, 
            T.SystemUserID AS SystemUserGroup_SystemUserID, 
            T.SystemGroupID AS SystemUserGroup_SystemGroupID, 
            T.IsActive AS SystemUserGroup_IsActive, 
            T.Description AS SystemUserGroup_Description, 
            T.CreationUserID AS SystemUserGroup_CreationUserID, 
            T.CreationDate AS SystemUserGroup_CreationDate, 
            T.LastUpdateUserID AS SystemUserGroup_LastUpdateUserID, 
            T.LastUpdate AS SystemUserGroup_LastUpdate, 
            True AS _from0
        FROM DBModelStoreContainer.SystemUserGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DBEntities.SystemUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DBEntities.SystemUsers", @"
    SELECT VALUE -- Constructing SystemUsers
        [DBModel.SystemUser](T1.SystemUser_SystemUserID, T1.SystemUser_SystemUserNetworkID, T1.SystemUser_SystemUserFullName, T1.SystemUser_IsActive, T1.SystemUser_Description, T1.SystemUser_CreationUserID, T1.SystemUser_CreationDate, T1.SystemUser_LastUpdateUserID, T1.SystemUser_LastUpdate)
    FROM (
        SELECT 
            T.SystemUserID AS SystemUser_SystemUserID, 
            T.SystemUserNetworkID AS SystemUser_SystemUserNetworkID, 
            T.SystemUserFullName AS SystemUser_SystemUserFullName, 
            T.IsActive AS SystemUser_IsActive, 
            T.Description AS SystemUser_Description, 
            T.CreationUserID AS SystemUser_CreationUserID, 
            T.CreationDate AS SystemUser_CreationDate, 
            T.LastUpdateUserID AS SystemUser_LastUpdateUserID, 
            T.LastUpdate AS SystemUser_LastUpdate, 
            True AS _from0
        FROM DBModelStoreContainer.SystemUsers AS T
    ) AS T1");
        }
    }
}
